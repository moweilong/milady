{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "http server api docs",
        "title": "serverNameExample api docs",
        "contact": {},
        "version": "v1.0.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/v1/userExample": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new userExample entity using the provided data in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userExample"
                ],
                "summary": "Create a new userExample",
                "parameters": [
                    {
                        "description": "userExample information",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateUserExampleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.CreateUserExampleReply"
                        }
                    }
                }
            }
        },
        "/api/v1/userExample/list": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a paginated list of userExample based on query filters, including page number and size.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userExample"
                ],
                "summary": "Get a paginated list of userExamples by custom conditions",
                "parameters": [
                    {
                        "description": "query parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_go-dev-frame_sponge_internal_types.Params"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ListUserExamplesReply"
                        }
                    }
                }
            }
        },
        "/api/v1/userExample/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets detailed information of a userExample specified by the given id in the path.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userExample"
                ],
                "summary": "Get a userExample by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetUserExampleByIDReply"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the specified userExample by given id in the path, support partial update.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userExample"
                ],
                "summary": "Update a userExample by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "userExample information",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateUserExampleByIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UpdateUserExampleByIDReply"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a existing userExample identified by the given id in the path.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userExample"
                ],
                "summary": "Delete a userExample by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.DeleteUserExampleByIDReply"
                        }
                    }
                }
            }
        },
        "/codes": {
            "get": {
                "description": "Returns a list of all defined HTTP error codes and their descriptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "list all error codes",
                "responses": {
                    "200": {
                        "description": "List of error codes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/errcode.ErrInfo"
                            }
                        }
                    }
                }
            }
        },
        "/config": {
            "get": {
                "description": "Returns the current system configuration in JSON format. This includes all runtime configuration parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get system configuration",
                "responses": {
                    "200": {
                        "description": "Returns the complete system configuration",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns system health information including status and hostname",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "check system health status",
                "responses": {
                    "200": {
                        "description": "Returns health status information",
                        "schema": {
                            "$ref": "#/definitions/handlerfunc.CheckHealthReply"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Simple ping endpoint to check if server is responsive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "ping the server",
                "responses": {
                    "200": {
                        "description": "Returns empty JSON object",
                        "schema": {
                            "$ref": "#/definitions/handlerfunc.PingReply"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errcode.ErrInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "github_com_go-dev-frame_sponge_internal_types.Column": {
            "type": "object",
            "properties": {
                "exp": {
                    "description": "expressions, which default to = when the value is null, have =, !=, \u003e, \u003e=, \u003c, \u003c=, like",
                    "type": "string"
                },
                "logic": {
                    "description": "logical type, default value is \"and\", support \u0026, and, ||, or",
                    "type": "string"
                },
                "name": {
                    "description": "column name",
                    "type": "string"
                },
                "value": {
                    "description": "column value"
                }
            }
        },
        "github_com_go-dev-frame_sponge_internal_types.Params": {
            "type": "object",
            "properties": {
                "columns": {
                    "description": "query conditions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_go-dev-frame_sponge_internal_types.Column"
                    }
                },
                "limit": {
                    "description": "lines per page",
                    "type": "integer"
                },
                "page": {
                    "description": "page number, starting from page 0",
                    "type": "integer"
                },
                "sort": {
                    "description": "sorted fields, multi-column sorting separated by commas",
                    "type": "string"
                }
            }
        },
        "handlerfunc.CheckHealthReply": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handlerfunc.PingReply": {
            "type": "object"
        },
        "types.CreateUserExampleReply": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "return code",
                    "type": "integer"
                },
                "data": {
                    "description": "return data",
                    "type": "object",
                    "properties": {
                        "id": {
                            "description": "id",
                            "type": "integer"
                        }
                    }
                },
                "msg": {
                    "description": "return information description",
                    "type": "string"
                }
            }
        },
        "types.CreateUserExampleRequest": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "age",
                    "type": "integer"
                },
                "avatar": {
                    "description": "avatar",
                    "type": "string",
                    "minLength": 5
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "gender": {
                    "description": "gender, 1:Male, 2:Female, other values:unknown",
                    "type": "integer",
                    "maximum": 2,
                    "minimum": 0
                },
                "name": {
                    "description": "username",
                    "type": "string",
                    "minLength": 2
                },
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "phone": {
                    "description": "phone number, e164 rules, e.g. +8612345678901",
                    "type": "string"
                }
            }
        },
        "types.DeleteUserExampleByIDReply": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "return code",
                    "type": "integer"
                },
                "data": {
                    "description": "return data"
                },
                "msg": {
                    "description": "return information description",
                    "type": "string"
                }
            }
        },
        "types.GetUserExampleByIDReply": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "return code",
                    "type": "integer"
                },
                "data": {
                    "description": "return data",
                    "type": "object",
                    "properties": {
                        "userExample": {
                            "$ref": "#/definitions/types.UserExampleObjDetail"
                        }
                    }
                },
                "msg": {
                    "description": "return information description",
                    "type": "string"
                }
            }
        },
        "types.ListUserExamplesReply": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "return code",
                    "type": "integer"
                },
                "data": {
                    "description": "return data",
                    "type": "object",
                    "properties": {
                        "userExamples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.UserExampleObjDetail"
                            }
                        }
                    }
                },
                "msg": {
                    "description": "return information description",
                    "type": "string"
                }
            }
        },
        "types.UpdateUserExampleByIDReply": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "return code",
                    "type": "integer"
                },
                "data": {
                    "description": "return data"
                },
                "msg": {
                    "description": "return information description",
                    "type": "string"
                }
            }
        },
        "types.UpdateUserExampleByIDRequest": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "age",
                    "type": "integer"
                },
                "avatar": {
                    "description": "avatar",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "gender": {
                    "description": "gender, 1:Male, 2:Female, other values:unknown",
                    "type": "integer"
                },
                "id": {
                    "description": "id",
                    "type": "integer"
                },
                "name": {
                    "description": "username",
                    "type": "string"
                },
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "phone": {
                    "description": "phone number",
                    "type": "string"
                }
            }
        },
        "types.UserExampleObjDetail": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "age",
                    "type": "integer"
                },
                "avatar": {
                    "description": "avatar",
                    "type": "string"
                },
                "createdAt": {
                    "description": "create time",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "gender": {
                    "description": "gender, 1:Male, 2:Female, other values:unknown",
                    "type": "integer"
                },
                "id": {
                    "description": "id",
                    "type": "integer"
                },
                "loginAt": {
                    "description": "login timestamp",
                    "type": "integer"
                },
                "name": {
                    "description": "username",
                    "type": "string"
                },
                "phone": {
                    "description": "phone number",
                    "type": "string"
                },
                "status": {
                    "description": "account status, 1:inactive, 2:activated, 3:blocked",
                    "type": "integer"
                },
                "updatedAt": {
                    "description": "update time",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type Bearer your-jwt-token to Value",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}
