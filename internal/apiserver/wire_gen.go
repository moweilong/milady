// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package apiserver

import (
	"github.com/moweilong/milady/internal/apiserver/biz"
	"github.com/moweilong/milady/internal/apiserver/pkg/validation"
	"github.com/moweilong/milady/internal/apiserver/store"
	"github.com/moweilong/milady/pkg/authz"
)

// Injectors from wire.go:

// NewServer sets up and create the web server with all necessary dependencies.
func NewServer(config *Config) (*Server, error) {
	db, err := ProvideDB(config)
	if err != nil {
		return nil, err
	}
	datastore := store.NewStore(db)
	v := authz.DefaultOptions()
	authzAuthz, err := authz.NewAuthz(db, v...)
	if err != nil {
		return nil, err
	}
	bizBiz := biz.NewBiz(datastore, authzAuthz)
	validator := validation.New(datastore)
	userRetriever := &UserRetriever{
		store: datastore,
	}
	serverConfig := &ServerConfig{
		Config:    config,
		biz:       bizBiz,
		val:       validator,
		retriever: userRetriever,
		authz:     authzAuthz,
	}
	server, err := NewWebServer(serverConfig)
	if err != nil {
		return nil, err
	}
	apiserverServer := &Server{
		cfg: serverConfig,
		srv: server,
	}
	return apiserverServer, nil
}
